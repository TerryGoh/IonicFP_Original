{"version":3,"file":"ng2-canvas-whiteboard.umd.js","sources":["../../../projects/ng2-canvas-whiteboard/src/lib/canvas-whiteboard-update.model.ts","../../../projects/ng2-canvas-whiteboard/src/lib/template.ts","../../../projects/ng2-canvas-whiteboard/src/lib/canvas-whiteboard.service.ts","../../../projects/ng2-canvas-whiteboard/src/lib/canvas-whiteboard-point.model.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/canvas-whiteboard-shape-options.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/canvas-whiteboard-shape.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/circle-shape.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/rectangle-shape.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/free-hand-shape.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/smiley-shape.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/star-shape.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/line-shape.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/canvas-whiteboard-shape.service.ts","../../../projects/ng2-canvas-whiteboard/src/lib/canvas-whiteboard.component.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/canvas-whiteboard-shape-selector.component.ts","../../../projects/ng2-canvas-whiteboard/src/lib/canvas-whiteboard-colorpicker.component.ts","../../../projects/ng2-canvas-whiteboard/src/lib/shapes/canvas-whiteboard-shape-preview.component.ts","../../../projects/ng2-canvas-whiteboard/src/lib/ng2-canvas-whiteboard.module.ts","../../../projects/ng2-canvas-whiteboard/src/public-api.ts","../../../projects/ng2-canvas-whiteboard/src/ng2-canvas-whiteboard.ts"],"sourcesContent":["import {CanvasWhiteboardShapeOptions} from \"./shapes/canvas-whiteboard-shape-options\";\n\nexport enum CanvasWhiteboardUpdateType {\n  START = 0,\n  DRAG = 1,\n  STOP = 2\n}\n\nexport class CanvasWhiteboardUpdate {\n  x: number;\n  y: number;\n  type: CanvasWhiteboardUpdateType;\n  UUID: string;\n\n  selectedShape: string;\n  selectedShapeOptions: CanvasWhiteboardShapeOptions;\n\n  static deserializeJson(json: any): CanvasWhiteboardUpdate {\n    let parsedJson;\n    try {\n      parsedJson = JSON.parse(json);\n      return new CanvasWhiteboardUpdate(\n        parsedJson['x'],\n        parsedJson['y'],\n        parsedJson['type'],\n        parsedJson['uuid'],\n        parsedJson['selectedShape'],\n        parsedJson['selectedShapeOptions']);\n    } catch (e) {\n      console.error(\"The canvas whiteboard update is not parseable\");\n      return null;\n    }\n  }\n\n  constructor(x?: number,\n              y?: number,\n              type?: CanvasWhiteboardUpdateType,\n              UUID?: string,\n              selectedShape?: string,\n              selectedShapeOptions?: CanvasWhiteboardShapeOptions) {\n    this.x = x;\n    this.y = y;\n    this.type = type;\n    this.UUID = UUID;\n    this.selectedShape = selectedShape;\n    this.selectedShapeOptions = selectedShapeOptions;\n  }\n\n  stringify(): string {\n    const objectToSerialize = {\n      x: this.x.toFixed(3),\n      y: this.y.toFixed(3),\n      type: this.type,\n      uuid: this.UUID,\n      selectedShape: this.selectedShape\n    };\n\n    if (this.selectedShapeOptions) {\n      objectToSerialize['selectedShapeOptions'] = this.selectedShapeOptions;\n    }\n\n    return JSON.stringify(objectToSerialize);\n  }\n}\n","export const DEFAULT_STYLES = `\n.canvas_whiteboard_button {\n    display: inline-block;\n    outline: 0px;\n    padding-top: 7px;\n    margin-bottom: 0;\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 1.42857143;\n    text-align: center;\n    white-space: nowrap;\n    vertical-align: middle;\n    -ms-touch-action: manipulation;\n    touch-action: manipulation;\n    cursor: pointer;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    background-image: none;\n    border: 1px solid transparent;\n    border-radius: 4px;\n}\n\n.canvas_whiteboard_buttons {\n    z-index: 3;\n}\n\n@media (max-width: 400px) {\n     .canvas_whiteboard_buttons {\n            position: absolute;\n            z-inde\n            top: 0;\n            width: 100%;\n            text-align: center;\n      }\n}\n\n@media (min-width: 401px) {\n    .canvas_whiteboard_buttons {\n        position: absolute;\n        right: 0%;\n        color: #fff;\n    }\n}\n\n.canvas_whiteboard_buttons {\n    padding: 5px;\n}\n\n.canvas_whiteboard_buttons > button {\n    margin: 5px;\n}\n\n.canvas_whiteboard_button-draw_animated {\n    -webkit-animation: pulsate 1s ease-out;\n    -webkit-animation-iteration-count: infinite;\n}\n\n@-webkit-keyframes pulsate {\n    0% {\n        -webkit-transform: scale(0.1, 0.1);\n        opacity: 0.0;\n    }\n    50% {\n        opacity: 1.0;\n    }\n    100% {\n        -webkit-transform: scale(1.2, 1.2);\n        opacity: 0.0;\n    }\n}\n.canvas_wrapper_div {\n    width: 100%;\n    height: 100%;\n    border: 0.5px solid #e2e2e2;\n}\n\n.canvas_whiteboard_button-clear {\n    padding-top: 5px;\n}\n\n.canvas_whiteboard {\n    position: absolute;\n    z-index: 1;\n}\n\n.incomplete_shapes_canvas_whiteboard {\n    position: absolute;\n    z-index: 2;\n}\n\n`;\n","import { Injectable } from '@angular/core';\nimport { CanvasWhiteboardUpdate } from './canvas-whiteboard-update.model';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class CanvasWhiteboardService {\n  private _canvasDrawSubject: Subject<CanvasWhiteboardUpdate[]> = new Subject();\n  canvasDrawSubject$: Observable<CanvasWhiteboardUpdate[]> = this._canvasDrawSubject.asObservable();\n\n  private _canvasClearSubject: Subject<any> = new Subject();\n  canvasClearSubject$: Observable<any> = this._canvasClearSubject.asObservable();\n\n  private _canvasUndoSubject: Subject<any> = new Subject();\n  canvasUndoSubject$: Observable<any> = this._canvasUndoSubject.asObservable();\n\n  private _canvasRedoSubject: Subject<any> = new Subject();\n  canvasRedoSubject$: Observable<any> = this._canvasRedoSubject.asObservable();\n\n  public drawCanvas(updates: CanvasWhiteboardUpdate[]): void {\n    this._canvasDrawSubject.next(updates);\n  }\n\n  public clearCanvas(): void {\n    this._canvasClearSubject.next();\n  }\n\n  public undoCanvas(updateUUD: string): void {\n    this._canvasUndoSubject.next(updateUUD);\n  }\n\n  public redoCanvas(updateUUD: string): void {\n    this._canvasRedoSubject.next(updateUUD);\n  }\n}\n","export class CanvasWhiteboardPoint {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export class CanvasWhiteboardShapeOptions {\n  shouldFillShape?: boolean;\n  fillStyle?: string;\n  strokeStyle?: string;\n  lineWidth?: number;\n  lineJoin?: string;\n  lineCap?: string;\n\n  constructor() {\n    this.shouldFillShape = false;\n    this.fillStyle = null;\n    this.strokeStyle = 'rgba(0, 0, 0, 1)';\n    this.lineWidth = 2;\n    this.lineJoin = 'round';\n    this.lineCap = 'round';\n  }\n}\n","import { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\nimport { CanvasWhiteboardPoint } from '../canvas-whiteboard-point.model';\nimport { CanvasWhiteboardUpdate } from '../canvas-whiteboard-update.model';\n\nexport abstract class CanvasWhiteboardShape {\n  isVisible: boolean;\n  protected positionPoint: CanvasWhiteboardPoint;\n  protected options: CanvasWhiteboardShapeOptions;\n\n  protected constructor(positionPoint?: CanvasWhiteboardPoint,\n                        options?: CanvasWhiteboardShapeOptions) {\n    this.positionPoint = positionPoint || new CanvasWhiteboardPoint(0, 0);\n    this.options = options || new CanvasWhiteboardShapeOptions();\n    this.isVisible = true;\n  }\n\n  abstract getShapeName(): string;\n\n  abstract onUpdateReceived(update: CanvasWhiteboardUpdate): void;\n\n  // noinspection TsLint\n  onStopReceived(update: CanvasWhiteboardUpdate): void {\n  }\n\n  abstract draw(context: CanvasRenderingContext2D): void;\n\n  abstract drawPreview(context: CanvasRenderingContext2D): void;\n}\n","import { CanvasWhiteboardShape } from './canvas-whiteboard-shape';\nimport { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\nimport { CanvasWhiteboardPoint } from '../canvas-whiteboard-point.model';\nimport { CanvasWhiteboardUpdate } from '../canvas-whiteboard-update.model';\n\nexport class CircleShape extends CanvasWhiteboardShape {\n  radius: number;\n\n  constructor(positionPoint?: CanvasWhiteboardPoint, options?: CanvasWhiteboardShapeOptions, radius?: number) {\n    super(positionPoint, options);\n    this.radius = radius || 0;\n  }\n\n  getShapeName(): string {\n    return 'CircleShape';\n  }\n\n  draw(context: CanvasRenderingContext2D): void {\n    context.beginPath();\n    context.arc(this.positionPoint.x, this.positionPoint.y, this.radius, 0, Math.PI * 2, false);\n\n    Object.assign(context, this.options);\n\n    context.stroke();\n    if (this.options.shouldFillShape) {\n      context.fill();\n    }\n\n    context.closePath();\n  }\n\n  drawPreview(context: CanvasRenderingContext2D): void {\n    this.positionPoint = new CanvasWhiteboardPoint(context.canvas.width / 2, context.canvas.height / 2);\n    this.radius = this.calculateRadius(context.canvas.width - 2, context.canvas.height / 2);\n    this.draw(context);\n  }\n\n  onUpdateReceived(update: CanvasWhiteboardUpdate): void {\n    this.radius = this.calculateRadius(update.x, update.y);\n  }\n\n  calculateRadius(x: number, y: number): number {\n    return Math.sqrt(Math.pow(x - this.positionPoint.x, 2) + Math.pow(y - this.positionPoint.y, 2));\n  }\n}\n","import { CanvasWhiteboardShape } from './canvas-whiteboard-shape';\nimport { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\nimport { CanvasWhiteboardPoint } from '../canvas-whiteboard-point.model';\nimport { CanvasWhiteboardUpdate } from '../canvas-whiteboard-update.model';\n\nexport class RectangleShape extends CanvasWhiteboardShape {\n  width: number;\n  height: number;\n\n  constructor(positionPoint?: CanvasWhiteboardPoint,\n              options?: CanvasWhiteboardShapeOptions,\n              width?: number,\n              height?: number) {\n    super(positionPoint, options);\n    this.width = width || 0;\n    this.height = height || 0;\n  }\n\n  getShapeName(): string {\n    return 'RectangleShape';\n  }\n\n  draw(context: CanvasRenderingContext2D): void {\n    if (!this.width || !this.height) {\n      return;\n    }\n    context.beginPath();\n\n    Object.assign(context, this.options);\n\n    context.rect(this.positionPoint.x, this.positionPoint.y, this.width, this.height);\n\n    context.stroke();\n    if (this.options.shouldFillShape) {\n      context.fill();\n    }\n\n    context.closePath();\n  }\n\n  drawPreview(context: CanvasRenderingContext2D): void {\n    this.positionPoint = new CanvasWhiteboardPoint(2, 2);\n    this.width = context.canvas.width - 4;\n    this.height = context.canvas.height - 4;\n    this.draw(context);\n  }\n\n  onUpdateReceived(update: CanvasWhiteboardUpdate): void {\n    this.width = update.x - this.positionPoint.x;\n    this.height = update.y - this.positionPoint.y;\n  }\n}\n","import { CanvasWhiteboardShape } from './canvas-whiteboard-shape';\nimport { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\nimport { CanvasWhiteboardPoint } from '../canvas-whiteboard-point.model';\nimport { CanvasWhiteboardUpdate } from '../canvas-whiteboard-update.model';\n\nexport class FreeHandShape extends CanvasWhiteboardShape {\n  linePositions: CanvasWhiteboardPoint[];\n\n  constructor(positionPoint?: CanvasWhiteboardPoint, options?: CanvasWhiteboardShapeOptions) {\n    super(positionPoint, options);\n    this.linePositions = [];\n  }\n\n  getShapeName(): string {\n    return 'FreeHandShape';\n  }\n\n  draw(context: CanvasRenderingContext2D): void {\n    Object.assign(context, this.options);\n\n    context.beginPath();\n    context.moveTo(this.positionPoint.x, this.positionPoint.y);\n    // Draw a dot\n    context.lineTo(this.positionPoint.x + 1, this.positionPoint.y + 1);\n\n    // Normal fastest free hand drawing\n    // this.linePositions.forEach((linePosition) => {\n    //     context.lineTo(linePosition.x, linePosition.y);\n    // });\n\n    // Quadratic curves drawing\n    let i = 0;\n    while (i < this.linePositions.length) {\n      if (this.linePositions.length - i > 2) {\n        const controlPoint1 = this.linePositions[i];\n        const controlPoint2 = this.linePositions[i + 1];\n        const endPoint = this.linePositions[i + 2];\n        context.bezierCurveTo(controlPoint1.x,\n          controlPoint1.y,\n          controlPoint2.x,\n          controlPoint2.y,\n          endPoint.x,\n          endPoint.y);\n        i += 2;\n      } else {\n        const linePosition = this.linePositions[i];\n        context.lineTo(linePosition.x, linePosition.y);\n        i += 1;\n      }\n    }\n\n    context.stroke();\n  }\n\n  drawPreview(context: CanvasRenderingContext2D): void {\n    this.positionPoint = new CanvasWhiteboardPoint(2, 2);\n    this.linePositions = [\n      new CanvasWhiteboardPoint(context.canvas.width - 5, context.canvas.height * 0.3),\n      // new CanvasWhiteboardPoint(context.canvas.width * 0.4, context.canvas.height * 0.6),\n      new CanvasWhiteboardPoint(context.canvas.width * 0.2, context.canvas.height * 0.4),\n      new CanvasWhiteboardPoint(context.canvas.width * 0.6, context.canvas.height * 0.8),\n      new CanvasWhiteboardPoint(context.canvas.width, context.canvas.height)\n    ];\n\n    this.draw(context);\n  }\n\n  onUpdateReceived(update: CanvasWhiteboardUpdate): void {\n    this.linePositions.push(new CanvasWhiteboardPoint(update.x, update.y));\n  }\n}\n","import { CanvasWhiteboardShape } from './canvas-whiteboard-shape';\nimport { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\nimport { CanvasWhiteboardPoint } from '../canvas-whiteboard-point.model';\nimport { CanvasWhiteboardUpdate } from '../canvas-whiteboard-update.model';\n\nexport class SmileyShape extends CanvasWhiteboardShape {\n  radius: number;\n\n  constructor(positionPoint?: CanvasWhiteboardPoint, options?: CanvasWhiteboardShapeOptions, radius?: number) {\n    super(positionPoint, options);\n    this.options.shouldFillShape = true;\n    this.options.fillStyle = this.options.fillStyle || 'yellow';\n\n    this.radius = radius || 0;\n  }\n\n  getShapeName(): string {\n    return 'SmileyShape';\n  }\n\n  draw(context: CanvasRenderingContext2D): void {\n    context.beginPath();\n\n    Object.assign(context, this.options);\n\n    context.arc(this.positionPoint.x, this.positionPoint.y, this.radius, 0, Math.PI * 2, false);\n    context.fill();\n    context.stroke();\n\n    context.beginPath();\n    const leftEyeX = this.positionPoint.x - this.radius * 0.3;\n    const rightEyeX = this.positionPoint.x + this.radius * 0.3;\n    const eyesY = this.positionPoint.y - this.radius * 0.2;\n    const eyeSize = this.radius * 0.1;\n\n    context.arc(leftEyeX, eyesY, eyeSize, 0, 2 * Math.PI, false);\n    context.arc(rightEyeX, eyesY, eyeSize, 0, 2 * Math.PI, false);\n    context.fillStyle = this.options.strokeStyle;\n    context.fill();\n\n    // draw the mouth\n    context.beginPath();\n    context.arc(this.positionPoint.x, this.positionPoint.y, this.radius * 0.7, 0, Math.PI, false);\n    context.stroke();\n\n    context.closePath();\n  }\n\n  drawPreview(context: CanvasRenderingContext2D): void {\n    this.positionPoint = new CanvasWhiteboardPoint(context.canvas.width / 2, context.canvas.height / 2);\n    this.radius = this.calculateRadius(context.canvas.width - 2, context.canvas.height / 2);\n    this.draw(context);\n  }\n\n  onUpdateReceived(update: CanvasWhiteboardUpdate): void {\n    this.radius = this.calculateRadius(update.x, update.y);\n  }\n\n  calculateRadius(x: number, y: number): number {\n    return Math.sqrt(Math.pow(x - this.positionPoint.x, 2) + Math.pow(y - this.positionPoint.y, 2));\n  }\n}\n","import { CanvasWhiteboardShape } from './canvas-whiteboard-shape';\nimport { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\nimport { CanvasWhiteboardPoint } from '../canvas-whiteboard-point.model';\nimport { CanvasWhiteboardUpdate } from '../canvas-whiteboard-update.model';\n\nexport class StarShape extends CanvasWhiteboardShape {\n  radius: number;\n  spikes: number;\n\n  constructor(positionPoint?: CanvasWhiteboardPoint,\n              options?: CanvasWhiteboardShapeOptions,\n              radius?: number,\n              spikes?: number) {\n    super(positionPoint, options);\n    this.radius = radius || 0;\n    this.spikes = spikes || 5;\n  }\n\n  getShapeName(): string {\n    return 'StarShape';\n  }\n\n  draw(context: CanvasRenderingContext2D): void {\n    Object.assign(context, this.options);\n\n    let rotation = Math.PI / 2 * 3;\n    let spikeX = this.positionPoint.x;\n    let spikeY = this.positionPoint.y;\n    const step = Math.PI / this.spikes;\n\n    context.beginPath();\n    context.moveTo(this.positionPoint.x, this.positionPoint.y - this.radius);\n\n    for (let i = 0; i < this.spikes; i++) {\n      spikeX = this.positionPoint.x + Math.cos(rotation) * this.radius;\n      spikeY = this.positionPoint.y + Math.sin(rotation) * this.radius;\n      context.lineTo(spikeX, spikeY);\n      rotation += step;\n\n      spikeX = this.positionPoint.x + Math.cos(rotation) * (this.radius * 0.4);\n      spikeY = this.positionPoint.y + Math.sin(rotation) * (this.radius * 0.4);\n      context.lineTo(spikeX, spikeY);\n      rotation += step;\n      context.stroke();\n    }\n\n    context.lineTo(this.positionPoint.x, this.positionPoint.y - this.radius);\n    context.closePath();\n\n    context.stroke();\n\n    if (this.options.shouldFillShape) {\n      context.fill();\n    }\n  }\n\n  drawPreview(context: CanvasRenderingContext2D): void {\n    this.positionPoint = new CanvasWhiteboardPoint(context.canvas.width / 2, context.canvas.height / 2);\n    this.radius = this.calculateRadius(context.canvas.width - 2, context.canvas.height / 2);\n    this.draw(context);\n  }\n\n  onUpdateReceived(update: CanvasWhiteboardUpdate): void {\n    this.radius = this.calculateRadius(update.x, update.y);\n  }\n\n  calculateRadius(x: number, y: number): number {\n    return Math.sqrt(Math.pow(x - this.positionPoint.x, 2) + Math.pow(y - this.positionPoint.y, 2));\n  }\n}\n","import { CanvasWhiteboardShape } from './canvas-whiteboard-shape';\nimport { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\nimport { CanvasWhiteboardPoint } from '../canvas-whiteboard-point.model';\nimport { CanvasWhiteboardUpdate } from '../canvas-whiteboard-update.model';\n\nexport class LineShape extends CanvasWhiteboardShape {\n  endPosition: CanvasWhiteboardPoint;\n\n  constructor(positionPoint?: CanvasWhiteboardPoint,\n              options?: CanvasWhiteboardShapeOptions,\n              endPosition?: CanvasWhiteboardPoint) {\n    super(positionPoint, options);\n    this.endPosition = endPosition || new CanvasWhiteboardPoint(this.positionPoint.x, this.positionPoint.y);\n  }\n\n  getShapeName(): string {\n    return 'LineShape';\n  }\n\n  draw(context: CanvasRenderingContext2D): void {\n    if (!this.endPosition) {\n      return;\n    }\n    context.beginPath();\n    Object.assign(context, this.options);\n\n    context.moveTo(this.positionPoint.x, this.positionPoint.y);\n    context.lineTo(this.endPosition.x, this.endPosition.y);\n\n    context.closePath();\n    context.stroke();\n  }\n\n  drawPreview(context: CanvasRenderingContext2D): void {\n    this.positionPoint = new CanvasWhiteboardPoint(0, 0);\n    this.endPosition = new CanvasWhiteboardPoint(context.canvas.width, context.canvas.height);\n    this.draw(context);\n  }\n\n  onUpdateReceived(update: CanvasWhiteboardUpdate): void {\n    this.endPosition = new CanvasWhiteboardPoint(update.x, update.y);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanvasWhiteboardShape } from './canvas-whiteboard-shape';\nimport { CircleShape } from './circle-shape';\nimport { RectangleShape } from './rectangle-shape';\nimport { FreeHandShape } from './free-hand-shape';\nimport { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\nimport { CanvasWhiteboardPoint } from '../canvas-whiteboard-point.model';\nimport { SmileyShape } from './smiley-shape';\nimport { StarShape } from './star-shape';\nimport { LineShape } from './line-shape';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport type INewCanvasWhiteboardShape<T extends CanvasWhiteboardShape> =\n  new(positionPoint?: CanvasWhiteboardPoint, options?: CanvasWhiteboardShapeOptions, ...args: any[]) => T;\n\n@Injectable()\nexport class CanvasWhiteboardShapeService {\n  private registeredShapesSubject: BehaviorSubject<Array<INewCanvasWhiteboardShape<CanvasWhiteboardShape>>>;\n  public registeredShapes$: Observable<Array<INewCanvasWhiteboardShape<CanvasWhiteboardShape>>>;\n\n  constructor() {\n    this.registeredShapesSubject = new BehaviorSubject([\n      FreeHandShape,\n      LineShape,\n      RectangleShape,\n      CircleShape,\n      StarShape,\n      SmileyShape\n    ]);\n    this.registeredShapes$ = this.registeredShapesSubject.asObservable();\n  }\n\n  getShapeConstructorFromShapeName(shapeName: string): INewCanvasWhiteboardShape<CanvasWhiteboardShape> {\n    return this.getCurrentRegisteredShapes().find((shape) =>\n      (new shape).getShapeName() === shapeName);\n  }\n\n  getCurrentRegisteredShapes(): Array<INewCanvasWhiteboardShape<CanvasWhiteboardShape>> {\n    return this.registeredShapesSubject.getValue();\n  }\n\n  isRegisteredShape(shape: INewCanvasWhiteboardShape<CanvasWhiteboardShape>): boolean {\n    return this.getCurrentRegisteredShapes().indexOf(shape) !== -1;\n  }\n\n  registerShape(shape: INewCanvasWhiteboardShape<CanvasWhiteboardShape>): void {\n    if (this.isRegisteredShape(shape)) {\n      console.warn(`You tried to register a shape:${shape}, but is has already been registered.`);\n      return;\n    }\n\n    const registeredShapes = this.getCurrentRegisteredShapes();\n    registeredShapes.push(shape);\n    this.registeredShapesSubject.next(registeredShapes);\n  }\n\n  registerShapes(shapes: Array<INewCanvasWhiteboardShape<CanvasWhiteboardShape>>): void {\n    this.registeredShapesSubject.next(\n      this.getCurrentRegisteredShapes()\n        .concat(\n          shapes.filter((shape) => {\n            if (this.isRegisteredShape(shape)) {\n              console.warn(`You tried to register a shape:${shape}, but is has already been registered.`);\n              return false;\n            }\n\n            return true;\n          })\n        )\n    );\n  }\n\n  unregisterShape(shape: INewCanvasWhiteboardShape<CanvasWhiteboardShape>): void {\n    this.registeredShapesSubject.next(\n      this.getCurrentRegisteredShapes().filter(registeredShape => registeredShape !== shape)\n    );\n  }\n\n  unregisterShapes(shapes: Array<INewCanvasWhiteboardShape<CanvasWhiteboardShape>>): void {\n    this.registeredShapesSubject.next(\n      this.getCurrentRegisteredShapes().filter(shape => shapes.indexOf(shape) === -1)\n    );\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n  OnInit,\n  OnChanges, OnDestroy, AfterViewInit, NgZone, ChangeDetectorRef\n} from '@angular/core';\nimport { CanvasWhiteboardUpdate, CanvasWhiteboardUpdateType } from './canvas-whiteboard-update.model';\nimport { DEFAULT_STYLES } from './template';\nimport { CanvasWhiteboardService } from './canvas-whiteboard.service';\nimport { CanvasWhiteboardOptions } from './canvas-whiteboard-options';\nimport { CanvasWhiteboardShape } from './shapes/canvas-whiteboard-shape';\nimport { CanvasWhiteboardPoint } from './canvas-whiteboard-point.model';\nimport { CanvasWhiteboardShapeService, INewCanvasWhiteboardShape } from './shapes/canvas-whiteboard-shape.service';\nimport { CanvasWhiteboardShapeOptions } from './shapes/canvas-whiteboard-shape-options';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { cloneDeep, isEqual } from 'lodash-es';\n\n@Component({\n  selector: 'canvas-whiteboard',\n  template:\n      `\n    <div class=\"canvas_wrapper_div\">\n      <div class=\"canvas_whiteboard_buttons\">\n        <canvas-whiteboard-shape-selector *ngIf=\"shapeSelectorEnabled\"\n                                          [showShapeSelector]=\"showShapeSelector\"\n                                          [selectedShapeConstructor]=\"selectedShapeConstructor\"\n                                          [shapeOptions]=\"generateShapePreviewOptions()\"\n                                          (onToggleShapeSelector)=\"toggleShapeSelector($event)\"\n                                          (onShapeSelected)=\"selectShape($event)\"></canvas-whiteboard-shape-selector>\n\n        <canvas-whiteboard-colorpicker *ngIf=\"colorPickerEnabled || fillColorPickerEnabled\"\n                                       [previewText]=\"fillColorPickerText\"\n                                       [showColorPicker]=\"showFillColorPicker\"\n                                       [selectedColor]=\"fillColor\"\n                                       (onToggleColorPicker)=\"toggleFillColorPicker($event)\"\n                                       (onColorSelected)=\"changeFillColor($event)\">\n        </canvas-whiteboard-colorpicker>\n\n        <canvas-whiteboard-colorpicker *ngIf=\"colorPickerEnabled || strokeColorPickerEnabled\"\n                                       [previewText]=\"strokeColorPickerText\"\n                                       [showColorPicker]=\"showStrokeColorPicker\"\n                                       [selectedColor]=\"strokeColor\"\n                                       (onToggleColorPicker)=\"toggleStrokeColorPicker($event)\"\n                                       (onColorSelected)=\"changeStrokeColor($event)\">\n        </canvas-whiteboard-colorpicker>\n\n\n        <button *ngIf=\"drawButtonEnabled\" (click)=\"toggleDrawingEnabled()\"\n                [class.canvas_whiteboard_button-draw_animated]=\"getDrawingEnabled()\"\n                class=\"canvas_whiteboard_button canvas_whiteboard_button-draw\" type=\"button\">\n          <i [class]=\"drawButtonClass\" aria-hidden=\"true\"></i> {{drawButtonText}}\n        </button>\n\n        <button *ngIf=\"clearButtonEnabled\" (click)=\"clearCanvasLocal()\" type=\"button\"\n                class=\"canvas_whiteboard_button canvas_whiteboard_button-clear\">\n          <i [class]=\"clearButtonClass\" aria-hidden=\"true\"></i> {{clearButtonText}}\n        </button>\n\n        <button *ngIf=\"undoButtonEnabled\" (click)=\"undoLocal()\" type=\"button\"\n                class=\"canvas_whiteboard_button canvas_whiteboard_button-undo\">\n          <i [class]=\"undoButtonClass\" aria-hidden=\"true\"></i> {{undoButtonText}}\n        </button>\n\n        <button *ngIf=\"redoButtonEnabled\" (click)=\"redoLocal()\" type=\"button\"\n                class=\"canvas_whiteboard_button canvas_whiteboard_button-redo\">\n          <i [class]=\"redoButtonClass\" aria-hidden=\"true\"></i> {{redoButtonText}}\n        </button>\n        <button *ngIf=\"saveDataButtonEnabled\" (click)=\"saveLocal()\" type=\"button\"\n                class=\"canvas_whiteboard_button canvas_whiteboard_button-save\">\n          <i [class]=\"saveDataButtonClass\" aria-hidden=\"true\"></i> {{saveDataButtonText}}\n        </button>\n      </div>\n      <canvas #canvas class=\"canvas_whiteboard\"></canvas>\n      <canvas #incompleteShapesCanvas class=\"incomplete_shapes_canvas_whiteboard\"\n              (mousedown)=\"canvasUserEvents($event)\" (mouseup)=\"canvasUserEvents($event)\"\n              (mousemove)=\"canvasUserEvents($event)\" (mouseout)=\"canvasUserEvents($event)\"\n              (touchstart)=\"canvasUserEvents($event)\" (touchmove)=\"canvasUserEvents($event)\"\n              (touchend)=\"canvasUserEvents($event)\" (touchcancel)=\"canvasUserEvents($event)\"></canvas>\n    </div>\n  `,\n  styles: [DEFAULT_STYLES]\n})\nexport class CanvasWhiteboardComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\n  @Input() options: CanvasWhiteboardOptions;\n\n  // Number of ms to wait before sending out the updates as an array\n  @Input() batchUpdateTimeoutDuration = 100;\n\n  private _imageUrl: string;\n  @Input() set imageUrl(imageUrl: string) {\n    this._imageUrl = imageUrl;\n    this._imageElement = null;\n    this._redrawHistory();\n  }\n\n  get imageUrl(): string {\n    return this._imageUrl;\n  }\n\n  @Input() aspectRatio: number;\n  @Input() drawButtonClass: string;\n  @Input() clearButtonClass: string;\n  @Input() undoButtonClass: string;\n  @Input() redoButtonClass: string;\n  @Input() saveDataButtonClass: string;\n  @Input() drawButtonText = '';\n  @Input() clearButtonText = '';\n  @Input() undoButtonText = '';\n  @Input() redoButtonText = '';\n  @Input() saveDataButtonText = '';\n  @Input() strokeColorPickerText = 'Stroke';\n  @Input() fillColorPickerText = 'Fill';\n  @Input() drawButtonEnabled = true;\n  @Input() clearButtonEnabled = true;\n  @Input() undoButtonEnabled = false;\n  @Input() redoButtonEnabled = false;\n  @Input() saveDataButtonEnabled = false;\n  @Input() shouldDownloadDrawing = true;\n  /** @deprecated. Replaced with strokeColorPickerEnabled and fillColorPickerEnabled inputs */\n  @Input() colorPickerEnabled: boolean = false;\n  @Input() strokeColorPickerEnabled: boolean = false;\n  @Input() fillColorPickerEnabled: boolean = false;\n  @Input() lineWidth = 2;\n  @Input() strokeColor = 'rgba(0, 0, 0, 1)';\n  @Input() startingColor = '#fff';\n  @Input() scaleFactor = 0;\n  @Input() drawingEnabled = false;\n  @Input() showStrokeColorPicker = false;\n  @Input() showFillColorPicker = false;\n  @Input() downloadedFileName: string;\n\n  @Input() lineJoin = 'round';\n  @Input() lineCap = 'round';\n  @Input() shapeSelectorEnabled = true;\n  @Input() showShapeSelector = false;\n  @Input() fillColor = 'rgba(0,0,0,0)';\n\n  @Output() onClear = new EventEmitter<any>();\n  @Output() onUndo = new EventEmitter<any>();\n  @Output() onRedo = new EventEmitter<any>();\n  @Output() onBatchUpdate = new EventEmitter<CanvasWhiteboardUpdate[]>();\n  @Output() onImageLoaded = new EventEmitter<any>();\n  @Output() onSave = new EventEmitter<string | Blob>();\n\n  @ViewChild('canvas', {static: true}) canvas: ElementRef;\n  context: CanvasRenderingContext2D;\n\n  @ViewChild('incompleteShapesCanvas', {static: true}) private _incompleteShapesCanvas: ElementRef;\n  private _incompleteShapesCanvasContext: CanvasRenderingContext2D;\n  private _incompleteShapesMap: Map<string, CanvasWhiteboardShape>;\n\n  private _imageElement: any;\n\n  private _canDraw = true;\n\n  private _clientDragging = false;\n\n  private _updateHistory: CanvasWhiteboardUpdate[] = [];\n  private _lastUUID: string;\n  private _shapesMap: Map<string, CanvasWhiteboardShape>;\n\n  private _undoStack: string[] = []; // Stores the value of start and count for each continuous stroke\n  private _redoStack: string[] = [];\n  private _batchUpdates: CanvasWhiteboardUpdate[] = [];\n  private _updatesNotDrawn: any = [];\n\n  private _updateTimeout: any;\n\n  private _canvasWhiteboardServiceSubscriptions: Subscription[] = [];\n  private _resizeSubscription: Subscription;\n  private _registeredShapesSubscription: Subscription;\n\n  selectedShapeConstructor: INewCanvasWhiteboardShape<CanvasWhiteboardShape>;\n  canvasWhiteboardShapePreviewOptions: CanvasWhiteboardShapeOptions;\n\n  constructor(private ngZone: NgZone,\n              private changeDetectorRef: ChangeDetectorRef,\n              private canvasWhiteboardService: CanvasWhiteboardService,\n              private canvasWhiteboardShapeService: CanvasWhiteboardShapeService) {\n    this._shapesMap = new Map<string, CanvasWhiteboardShape>();\n    this._incompleteShapesMap = new Map<string, CanvasWhiteboardShape>();\n    this.canvasWhiteboardShapePreviewOptions = this.generateShapePreviewOptions();\n  }\n\n  /**\n   * Initialize the canvas drawing context. If we have an aspect ratio set up, the canvas will resize\n   * according to the aspect ratio.\n   */\n  ngOnInit(): void {\n    this._initInputsFromOptions(this.options);\n    this._initCanvasEventListeners();\n    this._initCanvasServiceObservables();\n    this.context = this.canvas.nativeElement.getContext('2d');\n    this._incompleteShapesCanvasContext = this._incompleteShapesCanvas.nativeElement.getContext('2d');\n  }\n\n  /**\n   * If an image exists and it's url changes, we need to redraw the new image on the canvas.\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.options && !isEqual(changes.options.currentValue, changes.options.previousValue)) {\n      this._initInputsFromOptions(changes.options.currentValue);\n    }\n  }\n\n  /**\n   * Recalculate the width and height of the canvas after the view has been fully initialized\n   */\n  ngAfterViewInit(): void {\n    this._calculateCanvasWidthAndHeight();\n    this._redrawHistory();\n  }\n\n  /**\n   * This method reads the options which are helpful since they can be really long when specified in HTML\n   * This method is also called everytime the options object changes\n   * For security reasons we must check each item on its own since if we iterate the keys\n   * we may be injected with malicious values\n   *\n   * @param options\n   */\n  private _initInputsFromOptions(options: CanvasWhiteboardOptions): void {\n    if (options) {\n      if (!this._isNullOrUndefined(options.batchUpdateTimeoutDuration)) {\n        this.batchUpdateTimeoutDuration = options.batchUpdateTimeoutDuration;\n      }\n      if (!this._isNullOrUndefined(options.imageUrl)) {\n        this.imageUrl = options.imageUrl;\n      }\n      if (!this._isNullOrUndefined(options.aspectRatio)) {\n        this.aspectRatio = options.aspectRatio;\n      }\n      if (!this._isNullOrUndefined(options.drawButtonClass)) {\n        this.drawButtonClass = options.drawButtonClass;\n      }\n      if (!this._isNullOrUndefined(options.clearButtonClass)) {\n        this.clearButtonClass = options.clearButtonClass;\n      }\n      if (!this._isNullOrUndefined(options.undoButtonClass)) {\n        this.undoButtonClass = options.undoButtonClass;\n      }\n      if (!this._isNullOrUndefined(options.redoButtonClass)) {\n        this.redoButtonClass = options.redoButtonClass;\n      }\n      if (!this._isNullOrUndefined(options.saveDataButtonClass)) {\n        this.saveDataButtonClass = options.saveDataButtonClass;\n      }\n      if (!this._isNullOrUndefined(options.drawButtonText)) {\n        this.drawButtonText = options.drawButtonText;\n      }\n      if (!this._isNullOrUndefined(options.clearButtonText)) {\n        this.clearButtonText = options.clearButtonText;\n      }\n      if (!this._isNullOrUndefined(options.undoButtonText)) {\n        this.undoButtonText = options.undoButtonText;\n      }\n      if (!this._isNullOrUndefined(options.redoButtonText)) {\n        this.redoButtonText = options.redoButtonText;\n      }\n      if (!this._isNullOrUndefined(options.saveDataButtonText)) {\n        this.saveDataButtonText = options.saveDataButtonText;\n      }\n      if (!this._isNullOrUndefined(options.strokeColorPickerText)) {\n        this.strokeColorPickerText = options.strokeColorPickerText;\n      }\n      if (!this._isNullOrUndefined(options.fillColorPickerText)) {\n        this.fillColorPickerText = options.fillColorPickerText;\n      }\n      if (!this._isNullOrUndefined(options.drawButtonEnabled)) {\n        this.drawButtonEnabled = options.drawButtonEnabled;\n      }\n      if (!this._isNullOrUndefined(options.clearButtonEnabled)) {\n        this.clearButtonEnabled = options.clearButtonEnabled;\n      }\n      if (!this._isNullOrUndefined(options.undoButtonEnabled)) {\n        this.undoButtonEnabled = options.undoButtonEnabled;\n      }\n      if (!this._isNullOrUndefined(options.redoButtonEnabled)) {\n        this.redoButtonEnabled = options.redoButtonEnabled;\n      }\n      if (!this._isNullOrUndefined(options.saveDataButtonEnabled)) {\n        this.saveDataButtonEnabled = options.saveDataButtonEnabled;\n      }\n      if (!this._isNullOrUndefined(options.colorPickerEnabled)) {\n        this.colorPickerEnabled = options.colorPickerEnabled;\n      }\n      if (!this._isNullOrUndefined(options.strokeColorPickerEnabled)) {\n        this.strokeColorPickerEnabled = options.strokeColorPickerEnabled;\n      }\n      if (!this._isNullOrUndefined(options.fillColorPickerEnabled)) {\n        this.fillColorPickerEnabled = options.fillColorPickerEnabled;\n      }\n      if (!this._isNullOrUndefined(options.lineWidth)) {\n        this.lineWidth = options.lineWidth;\n      }\n      if (!this._isNullOrUndefined(options.strokeColor)) {\n        this.strokeColor = options.strokeColor;\n      }\n      if (!this._isNullOrUndefined(options.shouldDownloadDrawing)) {\n        this.shouldDownloadDrawing = options.shouldDownloadDrawing;\n      }\n      if (!this._isNullOrUndefined(options.startingColor)) {\n        this.startingColor = options.startingColor;\n      }\n      if (!this._isNullOrUndefined(options.scaleFactor)) {\n        this.scaleFactor = options.scaleFactor;\n      }\n      if (!this._isNullOrUndefined(options.drawingEnabled)) {\n        this.drawingEnabled = options.drawingEnabled;\n      }\n      if (!this._isNullOrUndefined(options.downloadedFileName)) {\n        this.downloadedFileName = options.downloadedFileName;\n      }\n      if (!this._isNullOrUndefined(options.lineJoin)) {\n        this.lineJoin = options.lineJoin;\n      }\n      if (!this._isNullOrUndefined(options.lineCap)) {\n        this.lineCap = options.lineCap;\n      }\n      if (!this._isNullOrUndefined(options.shapeSelectorEnabled)) {\n        this.shapeSelectorEnabled = options.shapeSelectorEnabled;\n      }\n      if (!this._isNullOrUndefined(options.showShapeSelector)) {\n        this.showShapeSelector = options.showShapeSelector;\n      }\n      if (!this._isNullOrUndefined(options.fillColor)) {\n        this.fillColor = options.fillColor;\n      }\n      if (!this._isNullOrUndefined(options.showStrokeColorPicker)) {\n        this.showStrokeColorPicker = options.showStrokeColorPicker;\n      }\n      if (!this._isNullOrUndefined(options.showFillColorPicker)) {\n        this.showFillColorPicker = options.showFillColorPicker;\n      }\n    }\n  }\n\n  private _isNullOrUndefined(property: any): boolean {\n    return property === null || property === undefined;\n  }\n\n  /**\n   * Init global window listeners like resize and keydown\n   */\n  private _initCanvasEventListeners(): void {\n    this.ngZone.runOutsideAngular(() => {\n      this._resizeSubscription = fromEvent(window, 'resize')\n        .pipe(\n          debounceTime(200),\n          distinctUntilChanged()\n        )\n        .subscribe(() => {\n          this.ngZone.run(() => {\n            this._redrawCanvasOnResize();\n          });\n        });\n    });\n\n    window.addEventListener('keydown', this._canvasKeyDown.bind(this), false);\n  }\n\n  /**\n   * Subscribes to new signals in the canvas whiteboard service and executes methods accordingly\n   * Because of circular publishing and subscribing, the canvas methods do not use the service when\n   * local actions are completed (Ex. clicking undo from the button inside this component)\n   */\n  private _initCanvasServiceObservables(): void {\n    this._canvasWhiteboardServiceSubscriptions.push(this.canvasWhiteboardService.canvasDrawSubject$\n      .subscribe(updates => this.drawUpdates(updates)));\n    this._canvasWhiteboardServiceSubscriptions.push(this.canvasWhiteboardService.canvasClearSubject$\n      .subscribe(() => this.clearCanvas()));\n    this._canvasWhiteboardServiceSubscriptions.push(this.canvasWhiteboardService.canvasUndoSubject$\n      .subscribe((updateUUD) => this._undoCanvas(updateUUD)));\n    this._canvasWhiteboardServiceSubscriptions.push(this.canvasWhiteboardService.canvasRedoSubject$\n      .subscribe((updateUUD) => this._redoCanvas(updateUUD)));\n\n    this._registeredShapesSubscription = this.canvasWhiteboardShapeService.registeredShapes$.subscribe((shapes) => {\n      if (!this.selectedShapeConstructor || !this.canvasWhiteboardShapeService.isRegisteredShape(this.selectedShapeConstructor)) {\n        this.selectedShapeConstructor = shapes[0];\n      }\n    });\n  }\n\n  /**\n   * Calculate the canvas width and height from it's parent container width and height (use aspect ratio if needed)\n   */\n  private _calculateCanvasWidthAndHeight(): void {\n    this.context.canvas.width = this.canvas.nativeElement.parentNode.clientWidth;\n    if (this.aspectRatio) {\n      this.context.canvas.height = this.canvas.nativeElement.parentNode.clientWidth * this.aspectRatio;\n    } else {\n      this.context.canvas.height = this.canvas.nativeElement.parentNode.clientHeight;\n    }\n\n    this._incompleteShapesCanvasContext.canvas.width = this.context.canvas.width;\n    this._incompleteShapesCanvasContext.canvas.height = this.context.canvas.height;\n  }\n\n  /**\n   * Load an image and draw it on the canvas (if an image exists)\n   * @param callbackFn A function that is called after the image loading is finished\n   * @return Emits a value when the image has been loaded.\n   */\n  private _loadImage(callbackFn?: any): void {\n    this._canDraw = false;\n\n    // If we already have the image there is no need to acquire it\n    if (this._imageElement) {\n      this._canDraw = true;\n      callbackFn && callbackFn();\n      return;\n    }\n\n    this._imageElement = new Image();\n    this._imageElement.addEventListener('load', () => {\n      this._canDraw = true;\n      callbackFn && callbackFn();\n      this.onImageLoaded.emit(true);\n    });\n    this._imageElement.src = this.imageUrl;\n  }\n\n  /**\n   * Sends a notification after clearing the canvas\n   * This method should only be called from the clear button in this component since it will emit an clear event\n   * If the client calls this method he may create a circular clear action which may cause danger.\n   */\n  clearCanvasLocal(): void {\n    this.clearCanvas();\n    this.onClear.emit(true);\n  }\n\n  /**\n   * Clears all content on the canvas.\n   */\n  clearCanvas(): void {\n    this._removeCanvasData();\n    this._redoStack = [];\n  }\n\n  /**\n   * This method resets the state of the canvas and redraws it.\n   * It calls a callback function after redrawing\n   * @param callbackFn\n   */\n  private _removeCanvasData(callbackFn?: any): void {\n    this._shapesMap = new Map<string, CanvasWhiteboardShape>();\n    this._clientDragging = false;\n    this._updateHistory = [];\n    this._undoStack = [];\n    this._redrawBackground(callbackFn);\n  }\n\n  /**\n   * Clears the canvas and redraws the image if the url exists.\n   * @param callbackFn A function that is called after the background is redrawn\n   * @return Emits a value when the clearing is finished\n   */\n  private _redrawBackground(callbackFn?: any): void {\n    if (this.context) {\n      if (this.imageUrl) {\n        this._loadImage(() => {\n          this.context.save();\n          this._drawImage(this.context, this._imageElement, 0, 0, this.context.canvas.width, this.context.canvas.height, 0.5, 0.5);\n          this.context.restore();\n          this._drawMissingUpdates();\n          callbackFn && callbackFn();\n        });\n      } else {\n        this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n        this._drawStartingColor();\n        callbackFn && callbackFn();\n      }\n    }\n  }\n\n  private _drawStartingColor(): void {\n    const previousFillStyle = this.context.fillStyle;\n    this.context.save();\n\n    this.context.fillStyle = this.startingColor;\n    this.context.fillRect(0, 0, this.context.canvas.width, this.context.canvas.height);\n    this.context.fillStyle = previousFillStyle;\n\n    this.context.restore();\n  }\n\n\n  /**\n   * @deprecated Use getDrawingEnabled(): boolean\n   */\n  getShouldDraw(): boolean {\n    return this.getDrawingEnabled();\n  }\n\n  /**\n   * Returns a value of whether the user clicked the draw button on the canvas.\n   */\n  getDrawingEnabled(): boolean {\n    return this.drawingEnabled;\n  }\n\n  /**\n   * Toggles drawing on the canvas. It is called via the draw button on the canvas.\n   */\n  toggleDrawingEnabled(): void {\n    this.drawingEnabled = !this.drawingEnabled;\n  }\n\n  /**\n   * Set if drawing is enabled from the client using the canvas\n   * @param drawingEnabled\n   */\n  setDrawingEnabled(drawingEnabled: boolean): void {\n    this.drawingEnabled = drawingEnabled;\n  }\n\n  /**\n   * @deprecated Please use the changeStrokeColor(newStrokeColor: string): void method\n   */\n  changeColor(newStrokeColor: string): void {\n    this.changeStrokeColor(newStrokeColor);\n  }\n\n  /**\n   * Replaces the drawing color with a new color\n   * The format should be (\"#ffffff\" or \"rgb(r,g,b,a?)\")\n   * This method is public so that anyone can access the canvas and change the stroke color\n   *\n   * @param newStrokeColor The new stroke color\n   */\n  changeStrokeColor(newStrokeColor: string): void {\n    this.strokeColor = newStrokeColor;\n\n    this.canvasWhiteboardShapePreviewOptions = this.generateShapePreviewOptions();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * Replaces the fill color with a new color\n   * The format should be (\"#ffffff\" or \"rgb(r,g,b,a?)\")\n   * This method is public so that anyone can access the canvas and change the fill color\n   *\n   * @param newFillColor The new fill color\n   */\n  changeFillColor(newFillColor: string): void {\n    this.fillColor = newFillColor;\n    this.canvasWhiteboardShapePreviewOptions = this.generateShapePreviewOptions();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * This method is invoked by the undo button on the canvas screen\n   * It calls the global undo method and emits a notification after undoing.\n   * This method should only be called from the undo button in this component since it will emit an undo event\n   * If the client calls this method he may create a circular undo action which may cause danger.\n   */\n  undoLocal(): void {\n    this.undo((updateUUID) => {\n      this._redoStack.push(updateUUID);\n      this.onUndo.emit(updateUUID);\n    });\n  }\n\n  /**\n   * This methods selects the last uuid prepares it for undoing (making the whole update sequence invisible)\n   * This method can be called if the canvas component is a ViewChild of some other component.\n   * This method will work even if the undo button has been disabled\n   */\n  undo(callbackFn?: (updateUUID: string) => void): void {\n    if (!this._undoStack.length) {\n      return;\n    }\n\n    const updateUUID = this._undoStack.pop();\n    this._undoCanvas(updateUUID);\n    callbackFn && callbackFn(updateUUID);\n  }\n\n  /**\n   * This method takes an UUID for an update, and redraws the canvas by making all updates with that uuid invisible\n   * @param updateUUID\n   */\n  private _undoCanvas(updateUUID: string): void {\n    if (this._shapesMap.has(updateUUID)) {\n      const shape = this._shapesMap.get(updateUUID);\n      shape.isVisible = false;\n      this.drawAllShapes();\n    }\n  }\n\n  /**\n   * This method is invoked by the redo button on the canvas screen\n   * It calls the global redo method and emits a notification after redoing\n   * This method should only be called from the redo button in this component since it will emit an redo event\n   * If the client calls this method he may create a circular redo action which may cause danger.\n   */\n  redoLocal(): void {\n    this.redo((updateUUID) => {\n      this._undoStack.push(updateUUID);\n      this.onRedo.emit(updateUUID);\n    });\n  }\n\n  /**\n   * This methods selects the last uuid prepares it for redoing (making the whole update sequence visible)\n   * This method can be called if the canvas component is a ViewChild of some other component.\n   * This method will work even if the redo button has been disabled\n   */\n  redo(callbackFn?: any): void {\n    if (!this._redoStack.length) {\n      return;\n    }\n\n    const updateUUID = this._redoStack.pop();\n    this._redoCanvas(updateUUID);\n    callbackFn && callbackFn(updateUUID);\n  }\n\n  /**\n   * This method takes an UUID for an update, and redraws the canvas by making all updates with that uuid visible\n   * @param updateUUID\n   */\n  private _redoCanvas(updateUUID: string): void {\n    if (this._shapesMap.has(updateUUID)) {\n      const shape = this._shapesMap.get(updateUUID);\n      shape.isVisible = true;\n\n      this.drawAllShapes();\n    }\n  }\n\n  /**\n   * Catches the Mouse and Touch events made on the canvas.\n   * If drawing is disabled (If an image exists but it's not loaded, or the user did not click Draw),\n   * this function does nothing.\n   *\n   * If a \"mousedown | touchstart\" event is triggered, dragging will be set to true and an CanvasWhiteboardUpdate object\n   * of type \"start\" will be drawn and then sent as an update to all receiving ends.\n   *\n   * If a \"mousemove | touchmove\" event is triggered and the client is dragging, an CanvasWhiteboardUpdate object\n   * of type \"drag\" will be drawn and then sent as an update to all receiving ends.\n   *\n   * If a \"mouseup, mouseout | touchend, touchcancel\" event is triggered, dragging will be set to false and\n   * an CanvasWhiteboardUpdate object of type \"stop\" will be drawn and then sent as an update to all receiving ends.\n   *\n   */\n  canvasUserEvents(event: any): void {\n    // Ignore all if we didn't click the _draw! button or the image did not load\n    if (!this.drawingEnabled || !this._canDraw) {\n      return;\n    }\n\n    // Ignore mouse move Events if we're not dragging\n    if (!this._clientDragging\n      && (event.type === 'mousemove'\n        || event.type === 'touchmove'\n        || event.type === 'mouseout'\n        || event.type === 'touchcancel'\n        || event.type === 'mouseup'\n        || event.type === 'touchend'\n        || event.type === 'mouseout')) {\n      return;\n    }\n\n    if (event.target == this._incompleteShapesCanvas.nativeElement || event.target == this.canvas.nativeElement) {\n      event.preventDefault();\n    }\n\n    let update: CanvasWhiteboardUpdate;\n    let updateType: number;\n    const eventPosition: CanvasWhiteboardPoint = this._getCanvasEventPosition(event);\n    update = new CanvasWhiteboardUpdate(eventPosition.x, eventPosition.y);\n\n    switch (event.type) {\n      case 'mousedown':\n      case 'touchstart':\n        this._clientDragging = true;\n        this._lastUUID = this._generateUUID();\n        updateType = CanvasWhiteboardUpdateType.START;\n        this._redoStack = [];\n\n        this._addCurrentShapeDataToAnUpdate(update);\n        break;\n      case 'mousemove':\n      case 'touchmove':\n        if (!this._clientDragging) {\n          return;\n        }\n        updateType = CanvasWhiteboardUpdateType.DRAG;\n        break;\n      case 'touchcancel':\n      case 'mouseup':\n      case 'touchend':\n      case 'mouseout':\n        this._clientDragging = false;\n        updateType = CanvasWhiteboardUpdateType.STOP;\n        this._undoStack.push(this._lastUUID);\n        break;\n    }\n\n    update.UUID = this._lastUUID;\n    update.type = updateType;\n\n    this._draw(update);\n    this._prepareToSendUpdate(update);\n  }\n\n  /**\n   * Get the coordinates (x,y) from a given event\n   * If it is a touch event, get the touch positions\n   * If we released the touch, the position will be placed in the changedTouches object\n   * If it is not a touch event, use the original mouse event received\n   * @param eventData\n   */\n  private _getCanvasEventPosition(eventData: any): CanvasWhiteboardPoint {\n    const canvasBoundingRect = this.context.canvas.getBoundingClientRect();\n\n    let hasTouches = (eventData.touches && eventData.touches.length) ? eventData.touches[0] : null;\n    if (!hasTouches) {\n      hasTouches = (eventData.changedTouches && eventData.changedTouches.length) ? eventData.changedTouches[0] : null;\n    }\n\n    const event = hasTouches ? hasTouches : eventData;\n\n    const scaleWidth = canvasBoundingRect.width / this.context.canvas.width;\n    const scaleHeight = canvasBoundingRect.height / this.context.canvas.height;\n\n    let xPosition = (event.clientX - canvasBoundingRect.left);\n    let yPosition = (event.clientY - canvasBoundingRect.top);\n\n    xPosition /= this.scaleFactor ? this.scaleFactor : scaleWidth;\n    yPosition /= this.scaleFactor ? this.scaleFactor : scaleHeight;\n\n    return new CanvasWhiteboardPoint(xPosition / this.context.canvas.width, yPosition / this.context.canvas.height);\n  }\n\n  /**\n   * The update coordinates on the canvas are mapped so that all receiving ends\n   * can reverse the mapping and get the same position as the one that\n   * was drawn on this update.\n   *\n   * @param update The CanvasWhiteboardUpdate object.\n   */\n  private _prepareToSendUpdate(update: CanvasWhiteboardUpdate): void {\n    this._prepareUpdateForBatchDispatch(update);\n  }\n\n\n  /**\n   * Catches the Key Up events made on the canvas.\n   * If the ctrlKey or commandKey(macOS) was held and the keyCode is 90 (z), an undo action will be performed\n   * If the ctrlKey or commandKey(macOS) was held and the keyCode is 89 (y), a redo action will be performed\n   * If the ctrlKey or commandKey(macOS) was held and the keyCode is 83 (s) or 115(S), a save action will be performed\n   *\n   * @param event The event that occurred.\n   */\n  private _canvasKeyDown(event: any): void {\n    if (event.ctrlKey || event.metaKey) {\n      if (event.keyCode === 90 && this.undoButtonEnabled) {\n        event.preventDefault();\n        this.undo();\n      }\n      if (event.keyCode === 89 && this.redoButtonEnabled) {\n        event.preventDefault();\n        this.redo();\n      }\n      if (event.keyCode === 83 || event.keyCode === 115) {\n        event.preventDefault();\n        this.saveLocal();\n      }\n    }\n  }\n\n  /**\n   * On window resize, recalculate the canvas dimensions and redraw the history\n   */\n  private _redrawCanvasOnResize(): void {\n    this._calculateCanvasWidthAndHeight();\n    this._redrawHistory();\n  }\n\n  /**\n   * Redraw the saved history after resetting the canvas state\n   */\n  private _redrawHistory(): void {\n    const updatesToDraw = [].concat(this._updateHistory);\n\n    this._removeCanvasData(() => {\n      updatesToDraw.forEach((update: CanvasWhiteboardUpdate) => {\n        this._draw(update);\n      });\n    });\n  }\n\n  /**\n   * Draws a CanvasWhiteboardUpdate object on the canvas.\n   * The coordinates are first reverse mapped so that they can be drawn in the proper place. The update\n   * is afterwards added to the undoStack so that it can be\n   *\n   * If the CanvasWhiteboardUpdate Type is \"start\", a new \"selectedShape\" is created.\n   * If the CanvasWhiteboardUpdate Type is \"drag\", the shape is taken from the shapesMap and then it's updated.\n   * Afterwards the context is used to draw the shape on the canvas.\n   * This function saves the last X and Y coordinates that were drawn.\n   *\n   * @param update The update object.\n   */\n  private _draw(update: CanvasWhiteboardUpdate): void {\n    this._updateHistory.push(update);\n\n    // map the canvas coordinates to our canvas size since they are scaled.\n    update = Object.assign(new CanvasWhiteboardUpdate(),\n      update,\n      {\n        x: update.x * this.context.canvas.width,\n        y: update.y * this.context.canvas.height\n      });\n\n    if (update.type === CanvasWhiteboardUpdateType.START) {\n      const updateShapeConstructor = this.canvasWhiteboardShapeService.getShapeConstructorFromShapeName(update.selectedShape);\n      const shape = new updateShapeConstructor(\n        new CanvasWhiteboardPoint(update.x, update.y),\n        Object.assign(new CanvasWhiteboardShapeOptions(), update.selectedShapeOptions)\n      );\n      this._incompleteShapesMap.set(update.UUID, shape);\n      this._drawIncompleteShapes();\n    } else if (update.type === CanvasWhiteboardUpdateType.DRAG) {\n      const shape = this._incompleteShapesMap.get(update.UUID);\n      shape && shape.onUpdateReceived(update);\n      this._drawIncompleteShapes();\n    } else if (CanvasWhiteboardUpdateType.STOP) {\n      const shape = this._incompleteShapesMap.get(update.UUID);\n      shape && shape.onStopReceived(update);\n\n      this._shapesMap.set(update.UUID, shape);\n      this._incompleteShapesMap.delete(update.UUID);\n      this._swapCompletedShapeToActualCanvas(shape);\n    }\n  }\n\n  private _drawIncompleteShapes(): void {\n    this._resetIncompleteShapeCanvas();\n    this._incompleteShapesMap.forEach((shape) => {\n      if (shape.isVisible) {\n        shape.draw(this._incompleteShapesCanvasContext);\n      }\n    });\n  }\n\n  private _swapCompletedShapeToActualCanvas(shape: CanvasWhiteboardShape): void {\n    this._drawIncompleteShapes();\n    if (shape.isVisible) {\n      shape.draw(this.context);\n    }\n  }\n\n  private _resetIncompleteShapeCanvas(): void {\n    this._incompleteShapesCanvasContext.clearRect(0, 0, this._incompleteShapesCanvasContext.canvas.width,\n      this._incompleteShapesCanvasContext.canvas.height);\n    this._incompleteShapesCanvasContext.fillStyle = 'transparent';\n    this._incompleteShapesCanvasContext.fillRect(0, 0, this._incompleteShapesCanvasContext.canvas.width,\n      this._incompleteShapesCanvasContext.canvas.height);\n  }\n\n  /**\n   * Delete everything from the screen, redraw the background, and then redraw all the shapes from the shapesMap\n   */\n  drawAllShapes(): void {\n    this._redrawBackground(() => {\n      this._shapesMap.forEach((shape: CanvasWhiteboardShape) => {\n        if (shape.isVisible) {\n          shape.draw(this.context);\n        }\n      });\n    });\n  }\n\n  private _addCurrentShapeDataToAnUpdate(update: CanvasWhiteboardUpdate): void {\n    if (!update.selectedShape) {\n      update.selectedShape = (new this.selectedShapeConstructor).getShapeName();\n    }\n\n    if (!update.selectedShapeOptions) {\n      // Make a deep copy since we don't want some Shape implementation to change something by accident\n      update.selectedShapeOptions = Object.assign(new CanvasWhiteboardShapeOptions(),\n        this.generateShapePreviewOptions(), {lineWidth: this.lineWidth});\n    }\n  }\n\n  generateShapePreviewOptions(): CanvasWhiteboardShapeOptions {\n    return Object.assign(new CanvasWhiteboardShapeOptions(),\n      {\n        shouldFillShape: !!this.fillColor,\n        fillStyle: this.fillColor,\n        strokeStyle: this.strokeColor,\n        lineWidth: 2,\n        lineJoin: this.lineJoin,\n        lineCap: this.lineCap\n      });\n  }\n\n  /**\n   * Sends the update to all receiving ends as an Event emit. This is done as a batch operation (meaning\n   * multiple updates are sent at the same time). If this method is called, after 100 ms all updates\n   * that were made at that time will be packed up together and sent to the receiver.\n   *\n   * @param update The update object.\n   * @return Emits an Array of Updates when the batch.\n   */\n  private _prepareUpdateForBatchDispatch(update: CanvasWhiteboardUpdate): void {\n    this._batchUpdates.push(cloneDeep(update));\n    if (!this._updateTimeout) {\n      this._updateTimeout = setTimeout(() => {\n        this.onBatchUpdate.emit(this._batchUpdates);\n        this._batchUpdates = [];\n        this._updateTimeout = null;\n      }, this.batchUpdateTimeoutDuration);\n    }\n  }\n\n  /**\n   * Draws an Array of Updates on the canvas.\n   *\n   * @param updates The array with Updates.\n   */\n  drawUpdates(updates: CanvasWhiteboardUpdate[]): void {\n    if (this._canDraw) {\n      this._drawMissingUpdates();\n      updates.forEach((update: CanvasWhiteboardUpdate) => {\n        this._draw(update);\n      });\n    } else {\n      this._updatesNotDrawn = this._updatesNotDrawn.concat(updates);\n    }\n  }\n\n  /**\n   * Draw any missing updates that were received before the image was loaded\n   */\n  private _drawMissingUpdates(): void {\n    if (this._updatesNotDrawn.length > 0) {\n      const updatesToDraw = this._updatesNotDrawn;\n      this._updatesNotDrawn = [];\n\n      updatesToDraw.forEach((update: CanvasWhiteboardUpdate) => {\n        this._draw(update);\n      });\n    }\n  }\n\n  /**\n   * Draws an image on the canvas\n   *\n   * @param context The context used to draw the image on the canvas.\n   * @param image The image to draw.\n   * @param x The X coordinate for the starting draw position.\n   * @param y The Y coordinate for the starting draw position.\n   * @param width The width of the image that will be drawn.\n   * @param height The height of the image that will be drawn.\n   * @param offsetX The offsetX if the image size is larger than the canvas (aspect Ratio)\n   * @param offsetY The offsetY if the image size is larger than the canvas (aspect Ratio)\n   */\n  private _drawImage(context: any, image: any, x: number, y: number, width: number, height: number, offsetX: number, offsetY: number): void {\n    if (arguments.length === 2) {\n      x = y = 0;\n      width = context.canvas.width;\n      height = context.canvas.height;\n    }\n\n    offsetX = typeof offsetX === 'number' ? offsetX : 0.5;\n    offsetY = typeof offsetY === 'number' ? offsetY : 0.5;\n\n    if (offsetX < 0) {\n      offsetX = 0;\n    }\n    if (offsetY < 0) {\n      offsetY = 0;\n    }\n    if (offsetX > 1) {\n      offsetX = 1;\n    }\n    if (offsetY > 1) {\n      offsetY = 1;\n    }\n\n    const imageWidth = image.width;\n    const imageHeight = image.height;\n    const radius = Math.min(width / imageWidth, height / imageHeight);\n    let newWidth = imageWidth * radius;\n    let newHeight = imageHeight * radius;\n    let finalDrawX: any;\n    let finalDrawY: any;\n    let finalDrawWidth: any;\n    let finalDrawHeight: any;\n    let aspectRatio = 1;\n\n    // decide which gap to fill\n    if (newWidth < width) {\n      aspectRatio = width / newWidth;\n    }\n    if (Math.abs(aspectRatio - 1) < 1e-14 && newHeight < height) {\n      aspectRatio = height / newHeight;\n    }\n    newWidth *= aspectRatio;\n    newHeight *= aspectRatio;\n\n    // calculate source rectangle\n    finalDrawWidth = imageWidth / (newWidth / width);\n    finalDrawHeight = imageHeight / (newHeight / height);\n\n    finalDrawX = (imageWidth - finalDrawWidth) * offsetX;\n    finalDrawY = (imageHeight - finalDrawHeight) * offsetY;\n\n    // make sure the source rectangle is valid\n    if (finalDrawX < 0) {\n      finalDrawX = 0;\n    }\n    if (finalDrawY < 0) {\n      finalDrawY = 0;\n    }\n    if (finalDrawWidth > imageWidth) {\n      finalDrawWidth = imageWidth;\n    }\n    if (finalDrawHeight > imageHeight) {\n      finalDrawHeight = imageHeight;\n    }\n\n    // fill the image in destination rectangle\n    context.drawImage(image, finalDrawX, finalDrawY, finalDrawWidth, finalDrawHeight, x, y, width, height);\n  }\n\n  /**\n   * The HTMLCanvasElement.toDataURL() method returns a data URI containing a representation of the image in the format specified by the type parameter (defaults to PNG).\n   * The returned image is in a resolution of 96 dpi.\n   * If the height or width of the canvas is 0, the string \"data:,\" is returned.\n   * If the requested type is not image/png, but the returned value starts with data:image/png, then the requested type is not supported.\n   * Chrome also supports the image/webp type.\n   *\n   * @param returnedDataType A DOMString indicating the image format. The default format type is image/png.\n   * @param returnedDataQuality A Number between 0 and 1 indicating image quality if the requested type is image/jpeg or image/webp.\n   If this argument is anything else, the default value for image quality is used. The default value is 0.92. Other arguments are ignored.\n   */\n  generateCanvasDataUrl(returnedDataType: string = 'image/png', returnedDataQuality: number = 1): string {\n    return this.context.canvas.toDataURL(returnedDataType, returnedDataQuality);\n  }\n\n  /**\n   * Generate a Blob object representing the content drawn on the canvas.\n   * This file may be cached on the disk or stored in memory at the discretion of the user agent.\n   * If type is not specified, the image type is image/png. The created image is in a resolution of 96dpi.\n   * The third argument is used with image/jpeg images to specify the quality of the output.\n   *\n   * @param callbackFn The function that should be executed when the blob is created. Should accept a parameter Blob (for the result).\n   * @param returnedDataType A DOMString indicating the image format. The default type is image/png.\n   * @param returnedDataQuality A Number between 0 and 1 indicating image quality if the requested type is image/jpeg or image/webp.\n   If this argument is anything else, the default value for image quality is used. Other arguments are ignored.\n   */\n  generateCanvasBlob(callbackFn: any, returnedDataType: string = 'image/png', returnedDataQuality: number = 1): void {\n    let toBlobMethod: Function;\n\n    if (typeof this.context.canvas.toBlob !== 'undefined') {\n      toBlobMethod = this.context.canvas.toBlob.bind(this.context.canvas);\n    } else if (typeof (this.context.canvas as any).msToBlob !== 'undefined') {\n      // For IE\n      toBlobMethod = (callback) => {\n        callback && callback((this.context.canvas as any).msToBlob());\n      };\n    }\n\n    toBlobMethod && toBlobMethod((blob: Blob) => {\n      callbackFn && callbackFn(blob, returnedDataType);\n    }, returnedDataType, returnedDataQuality);\n  }\n\n  /**\n   * Generate a canvas image representation and download it locally\n   * The name of the image is canvas_drawing_ + the current local Date and Time the image was created\n   * Methods for standalone creation of the images in this method are left here for backwards compatibility\n   *\n   * @param returnedDataType A DOMString indicating the image format. The default type is image/png.\n   * @param downloadData? The created string or Blob (IE).\n   * @param customFileName? The name of the file that should be downloaded\n   */\n  downloadCanvasImage(returnedDataType: string = 'image/png', downloadData?: string | Blob, customFileName?: string): void {\n    if (window.navigator.msSaveOrOpenBlob === undefined) {\n      const downloadLink = document.createElement('a');\n      downloadLink.setAttribute('href', downloadData ? downloadData as string : this.generateCanvasDataUrl(returnedDataType));\n\n      const fileName = customFileName ? customFileName\n        : (this.downloadedFileName ? this.downloadedFileName : 'canvas_drawing_' + new Date().valueOf());\n\n      downloadLink.setAttribute('download', fileName + this._generateDataTypeString(returnedDataType));\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    } else {\n      // IE-specific code\n      if (downloadData) {\n        this._saveCanvasBlob(downloadData as Blob, returnedDataType);\n      } else {\n        this.generateCanvasBlob(this._saveCanvasBlob.bind(this), returnedDataType);\n      }\n    }\n  }\n\n  /**\n   * Save the canvas blob (IE) locally\n   * @param blob\n   * @param returnedDataType\n   */\n  private _saveCanvasBlob(blob: Blob, returnedDataType: string = 'image/png'): void {\n    window.navigator.msSaveOrOpenBlob(blob, 'canvas_drawing_' +\n      new Date().valueOf() + this._generateDataTypeString(returnedDataType));\n  }\n\n  /**\n   * This method generates a canvas url string or a canvas blob with the presented data type\n   * A callback function is then invoked since the blob creation must be done via a callback\n   *\n   * @param callback\n   * @param returnedDataType\n   * @param returnedDataQuality\n   */\n  generateCanvasData(callback: any, returnedDataType: string = 'image/png', returnedDataQuality: number = 1): void {\n    if (window.navigator.msSaveOrOpenBlob === undefined) {\n      callback && callback(this.generateCanvasDataUrl(returnedDataType, returnedDataQuality));\n    } else {\n      this.generateCanvasBlob(callback, returnedDataType, returnedDataQuality);\n    }\n  }\n\n  /**\n   * Local method to invoke saving of the canvas data when clicked on the canvas Save button\n   * This method will emit the generated data with the specified Event Emitter\n   *\n   * @param returnedDataType\n   */\n  saveLocal(returnedDataType: string = 'image/png'): void {\n    this.generateCanvasData((generatedData: string | Blob) => {\n      this.onSave.emit(generatedData);\n\n      if (this.shouldDownloadDrawing) {\n        this.downloadCanvasImage(returnedDataType, generatedData);\n      }\n    });\n  }\n\n  private _generateDataTypeString(returnedDataType: string): string {\n    if (returnedDataType) {\n      return '.' + returnedDataType.split('/')[1];\n    }\n\n    return '';\n  }\n\n  /**\n   * Toggles the color picker window, delegating the showColorPicker Input to the ColorPickerComponent.\n   * If no value is supplied (null/undefined) the current value will be negated and used.\n   * @param value\n   */\n  toggleStrokeColorPicker(value: boolean): void {\n    this.showStrokeColorPicker = !this._isNullOrUndefined(value) ? value : !this.showStrokeColorPicker;\n  }\n\n  /**\n   * Toggles the color picker window, delegating the showColorPicker Input to the ColorPickerComponent.\n   * If no value is supplied (null/undefined) the current value will be negated and used.\n   * @param value\n   */\n  toggleFillColorPicker(value: boolean): void {\n    this.showFillColorPicker = !this._isNullOrUndefined(value) ? value : !this.showFillColorPicker;\n  }\n\n  /**\n   * Toggles the shape selector window, delegating the showShapeSelector Input to the CanvasWhiteboardShapeSelectorComponent.\n   * If no value is supplied (null/undefined) the current value will be negated and used.\n   * @param value\n   */\n  toggleShapeSelector(value: boolean): void {\n    this.showShapeSelector = !this._isNullOrUndefined(value) ? value : !this.showShapeSelector;\n  }\n\n  selectShape(newShapeBlueprint: INewCanvasWhiteboardShape<CanvasWhiteboardShape>): void {\n    this.selectedShapeConstructor = newShapeBlueprint;\n  }\n\n  /**\n   * Returns a deep copy of the current drawing history for the canvas.\n   * The deep copy is returned because we don't want anyone to mutate the current history\n   */\n  getDrawingHistory(): CanvasWhiteboardUpdate[] {\n    return cloneDeep(this._updateHistory);\n  }\n\n  /**\n   * Unsubscribe from a given subscription if it is active\n   * @param subscription\n   */\n  private _unsubscribe(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private _generateUUID(): string {\n    return this._random4() + this._random4() + '-' + this._random4() + '-' + this._random4() + '-' +\n      this._random4() + '-' + this._random4() + this._random4() + this._random4();\n  }\n\n  private _random4(): string {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  /**\n   * Unsubscribe from the service observables\n   */\n  ngOnDestroy(): void {\n    this._unsubscribe(this._resizeSubscription);\n    this._unsubscribe(this._registeredShapesSubscription);\n    this._canvasWhiteboardServiceSubscriptions.forEach(subscription => this._unsubscribe(subscription));\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output\n} from '@angular/core';\nimport { CanvasWhiteboardShapeService, INewCanvasWhiteboardShape } from './canvas-whiteboard-shape.service';\nimport { CanvasWhiteboardShape } from './canvas-whiteboard-shape';\nimport { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'canvas-whiteboard-shape-selector',\n  host: {\n    '(document:mousedown)': 'closeOnExternalClick($event)',\n    '(document:touchstart)': 'closeOnExternalClick($event)'\n  },\n  template: `\n    <div *ngIf=\"!showShapeSelector\" (click)=\"toggleShapeSelector($event)\"\n         class=\"canvas-whiteboard-shape-selector-selected-preview\">\n      <canvas-whiteboard-shape-preview [shapeConstructor]=\"selectedShapeConstructor\"\n                                       [shapeOptions]=\"shapeOptions\"></canvas-whiteboard-shape-preview>\n    </div>\n    <div class=\"canvas-whiteboard-shape-selector-wrapper\" *ngIf=\"showShapeSelector\">\n      <canvas-whiteboard-shape-preview *ngFor=\"let shapeConstructor of registeredShapes$ | async\"\n                                       [shapeConstructor]=\"shapeConstructor\"\n                                       [shapeOptions]=\"shapeOptions\"\n                                       (click)=\"selectShape(shapeConstructor)\"></canvas-whiteboard-shape-preview>\n    </div>\n  `,\n  styles: [`\n    .canvas-whiteboard-shape-selector-selected-preview {\n      vertical-align: bottom;\n      display: inline-block;\n    }\n\n    .canvas-whiteboard-shape-selector-wrapper {\n      display: block;\n      padding: 4px;\n      border: 1px solid #afafaf;\n    }\n\n    @media (min-width: 401px) {\n      .canvas-whiteboard-shape-selector-wrapper {\n      }\n    }\n  `]\n})\nexport class CanvasWhiteboardShapeSelectorComponent {\n  @Input() readonly showShapeSelector: boolean = false;\n  @Input() readonly selectedShapeConstructor: INewCanvasWhiteboardShape<CanvasWhiteboardShape>;\n  @Input() readonly shapeOptions: CanvasWhiteboardShapeOptions;\n\n  @Output() onToggleShapeSelector = new EventEmitter<boolean>();\n  @Output() onShapeSelected = new EventEmitter<INewCanvasWhiteboardShape<CanvasWhiteboardShape>>();\n\n  registeredShapes$: Observable<INewCanvasWhiteboardShape<CanvasWhiteboardShape>[]>;\n\n  constructor(private elementRef: ElementRef,\n              private canvasWhiteboardShapeService: CanvasWhiteboardShapeService) {\n    this.registeredShapes$ = this.canvasWhiteboardShapeService.registeredShapes$;\n  }\n\n  selectShape(shape: INewCanvasWhiteboardShape<CanvasWhiteboardShape>): void {\n    this.onShapeSelected.emit(shape);\n    this.toggleShapeSelector(null);\n  }\n\n  closeOnExternalClick(event): void {\n    if (!this.elementRef.nativeElement.contains(event.target) && this.showShapeSelector) {\n      this.onToggleShapeSelector.emit(false);\n    }\n  }\n\n  toggleShapeSelector(event: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.onToggleShapeSelector.emit(!this.showShapeSelector);\n  }\n}\n","import {\n  Component,\n  Output,\n  EventEmitter, OnInit, ViewChild, ElementRef, Input\n} from '@angular/core';\n\n@Component({\n  selector: 'canvas-whiteboard-colorpicker',\n  host: {\n    '(document:mousedown)': 'closeOnExternalClick($event)',\n    '(document:touchstart)': 'closeOnExternalClick($event)'\n  },\n  template: `\n    <div [hidden]=\"showColorPicker\" class=\"canvas-whiteboard-colorpicker-input\"\n         (click)=\"toggleColorPicker($event)\">\n      <div class=\"selected-color-type-wrapper\">{{previewText}}</div>\n      <div class=\"selected-color-preview\" [style.background]=\"selectedColor\"></div>\n    </div>\n    <div [hidden]=\"!showColorPicker\" class=\"canvas-whiteboard-colorpicker-wrapper\">\n      <div (click)=\"selectColor('transparent')\" class=\"transparent-color\">Transparent</div>\n      <canvas #canvaswhiteboardcolorpicker class=\"canvas-whiteboard-colorpicker\" width=\"284\" height=\"155\"\n              (click)=\"selectColor(determineColorFromCanvas($event))\"></canvas>\n    </div>\n  `,\n  styles: [`\n    .selected-color-preview {\n      width: 100%;\n      height: 20%;\n      position: absolute;\n      bottom: 0;\n      left: 0;\n    }\n\n    .selected-color-type-wrapper {\n      display: inline-block;\n      height: 100%;\n      width: 100%;\n      text-align: center;\n      font-size: 14px;\n      color: #000;\n    }\n\n    .transparent-color {\n      font-size: 14px;\n    }\n\n    .canvas-whiteboard-colorpicker-wrapper {\n      border: 1px solid #afafaf;\n      color: #000;\n    }\n\n    @media (min-width: 401px) {\n      .canvas-whiteboard-colorpicker-wrapper {\n        position: absolute;\n      }\n    }\n\n    .canvas-whiteboard-colorpicker-input {\n      display: inline-block;\n      position: relative;\n      width: 44px;\n      height: 44px;\n      margin: 5px;\n      cursor: pointer;\n      color: #000;\n    }\n  `]\n})\nexport class CanvasWhiteboardColorPickerComponent implements OnInit {\n\n  @Input() previewText: string;\n  @Input() readonly selectedColor: string = 'rgba(0,0,0,1)';\n  @ViewChild('canvaswhiteboardcolorpicker', {static: true}) canvas: ElementRef;\n\n  @Input() readonly showColorPicker: boolean = false;\n  private _context: CanvasRenderingContext2D;\n\n  @Output() onToggleColorPicker = new EventEmitter<boolean>();\n  @Output() onColorSelected = new EventEmitter<string>();\n  @Output() onSecondaryColorSelected = new EventEmitter<string>();\n\n  constructor(private elementRef: ElementRef) {\n  }\n\n  /**\n   * Initialize the canvas drawing context. If we have an aspect ratio set up, the canvas will resize\n   * according to the aspect ratio.\n   */\n  ngOnInit(): void {\n    this._context = this.canvas.nativeElement.getContext('2d');\n    this.createColorPalette();\n  }\n\n  createColorPalette(): void {\n    let gradient = this._context.createLinearGradient(0, 0, this._context.canvas.width, 0);\n    gradient.addColorStop(0, 'rgb(255, 0, 0)');\n    gradient.addColorStop(0.15, 'rgb(255, 0, 255)');\n    gradient.addColorStop(0.33, 'rgb(0, 0, 255)');\n    gradient.addColorStop(0.49, 'rgb(0, 255, 255)');\n    gradient.addColorStop(0.67, 'rgb(0, 255, 0)');\n    gradient.addColorStop(0.84, 'rgb(255, 255, 0)');\n    gradient.addColorStop(1, 'rgb(255, 0, 0)');\n    this._context.fillStyle = gradient;\n    this._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\n\n    gradient = this._context.createLinearGradient(0, 0, 0, this._context.canvas.height);\n    gradient.addColorStop(0, 'rgba(255, 255, 255, 1)');\n    gradient.addColorStop(0.5, 'rgba(255, 255, 255, 0)');\n    gradient.addColorStop(0.5, 'rgba(0, 0, 0, 0)');\n    gradient.addColorStop(1, 'rgba(0, 0, 0, 1)');\n    this._context.fillStyle = gradient;\n    this._context.fillRect(0, 0, this._context.canvas.width, this._context.canvas.height);\n  }\n\n  closeOnExternalClick(event): void {\n    if (!this.elementRef.nativeElement.contains(event.target) && this.showColorPicker) {\n      this.onToggleColorPicker.emit(false);\n    }\n  }\n\n  toggleColorPicker(event: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.onToggleColorPicker.emit(!this.showColorPicker);\n  }\n\n  determineColorFromCanvas(event: any): string {\n    const canvasRect = this._context.canvas.getBoundingClientRect();\n    const imageData = this._context.getImageData(event.clientX - canvasRect.left,\n      event.clientY - canvasRect.top, 1, 1);\n\n    return `rgba(${imageData.data[0]}, ${imageData.data[1]}, ${imageData.data[2]}, ${imageData.data[3]})`;\n  }\n\n  selectColor(color: string): void {\n    this.onColorSelected.emit(color);\n    this.toggleColorPicker(null);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  ViewChild,\n  AfterViewInit,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport { INewCanvasWhiteboardShape } from './canvas-whiteboard-shape.service';\nimport { CanvasWhiteboardShape } from './canvas-whiteboard-shape';\nimport { CanvasWhiteboardPoint } from '../canvas-whiteboard-point.model';\nimport { CanvasWhiteboardShapeOptions } from './canvas-whiteboard-shape-options';\n\n@Component({\n  selector: 'canvas-whiteboard-shape-preview',\n  template: `\n    <canvas #canvasWhiteboardShapePreview width=\"50px\" height=\"50px\"\n            class=\"canvas-whiteboard-shape-preview-canvas\"></canvas>\n  `,\n  styles: [`\n    .canvas-whiteboard-shape-preview-canvas {\n      cursor: pointer;\n    }\n  `]\n})\nexport class CanvasWhiteboardShapePreviewComponent implements AfterViewInit, OnChanges {\n  @Input() readonly shapeConstructor: INewCanvasWhiteboardShape<CanvasWhiteboardShape>;\n  @Input() readonly shapeOptions: CanvasWhiteboardShapeOptions;\n\n  @ViewChild('canvasWhiteboardShapePreview') canvas: ElementRef;\n\n  ngAfterViewInit(): void {\n    this.drawShapePreview();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.shapeConstructor || changes.shapeOptions) {\n      this.drawShapePreview();\n    }\n  }\n\n  drawShapePreview(): void {\n    if (!this.canvas) {\n      return;\n    }\n\n    const context: CanvasRenderingContext2D = this.canvas.nativeElement.getContext('2d');\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n\n    const concreteShape = new this.shapeConstructor(\n      new CanvasWhiteboardPoint(0, 0),\n      Object.assign(new CanvasWhiteboardShapeOptions(), this.shapeOptions)\n    );\n\n    concreteShape.drawPreview(context);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CanvasWhiteboardComponent } from './canvas-whiteboard.component';\nimport { CommonModule } from '@angular/common';\nimport { CanvasWhiteboardColorPickerComponent } from './canvas-whiteboard-colorpicker.component';\nimport { CanvasWhiteboardShapeSelectorComponent } from './shapes/canvas-whiteboard-shape-selector.component';\nimport { CanvasWhiteboardShapePreviewComponent } from './shapes/canvas-whiteboard-shape-preview.component';\nimport { CanvasWhiteboardService } from './canvas-whiteboard.service';\nimport { CanvasWhiteboardShapeService } from './shapes/canvas-whiteboard-shape.service';\n\n@NgModule({\n  declarations: [\n    CanvasWhiteboardComponent,\n    CanvasWhiteboardColorPickerComponent,\n    CanvasWhiteboardShapeSelectorComponent,\n    CanvasWhiteboardShapePreviewComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    CanvasWhiteboardService,\n    CanvasWhiteboardShapeService\n  ],\n  exports: [CanvasWhiteboardComponent]\n})\nexport class CanvasWhiteboardModule {\n\n}\n","/*\n * Public API Surface of ng2-canvas-whiteboard\n */\nexport { CanvasWhiteboardComponent } from './lib/canvas-whiteboard.component';\nexport { CanvasWhiteboardUpdate } from './lib/canvas-whiteboard-update.model';\nexport { CanvasWhiteboardService } from './lib/canvas-whiteboard.service';\nexport { CanvasWhiteboardOptions } from './lib/canvas-whiteboard-options';\nexport { CanvasWhiteboardPoint } from './lib/canvas-whiteboard-point.model';\nexport { CanvasWhiteboardShape } from './lib/shapes/canvas-whiteboard-shape';\nexport { CanvasWhiteboardShapeOptions } from './lib/shapes/canvas-whiteboard-shape-options';\nexport { CanvasWhiteboardShapeService } from './lib/shapes/canvas-whiteboard-shape.service';\nexport { FreeHandShape } from './lib/shapes/free-hand-shape';\nexport { CircleShape } from './lib/shapes/circle-shape';\nexport { LineShape } from './lib/shapes/line-shape';\nexport { RectangleShape } from './lib/shapes/rectangle-shape';\nexport { SmileyShape } from './lib/shapes/smiley-shape';\nexport { StarShape } from './lib/shapes/star-shape';\nexport { CanvasWhiteboardShapeSelectorComponent } from './lib/shapes/canvas-whiteboard-shape-selector.component';\nexport { CanvasWhiteboardColorPickerComponent } from './lib/canvas-whiteboard-colorpicker.component';\nexport { CanvasWhiteboardShapePreviewComponent } from './lib/shapes/canvas-whiteboard-shape-preview.component';\nexport { CanvasWhiteboardModule } from './lib/ng2-canvas-whiteboard.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {DEFAULT_STYLES as ɵa} from './lib/template';"],"names":["Subject","Injectable","BehaviorSubject","EventEmitter","isEqual","fromEvent","debounceTime","distinctUntilChanged","cloneDeep","Component","NgZone","ChangeDetectorRef","Input","Output","ViewChild","ElementRef","NgModule","CommonModule"],"mappings":"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"}