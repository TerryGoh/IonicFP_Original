import { EventEmitter, OnInit, ElementRef } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class CanvasWhiteboardColorPickerComponent implements OnInit {
    private elementRef;
    previewText: string;
    readonly selectedColor: string;
    canvas: ElementRef;
    readonly showColorPicker: boolean;
    private _context;
    onToggleColorPicker: EventEmitter<boolean>;
    onColorSelected: EventEmitter<string>;
    onSecondaryColorSelected: EventEmitter<string>;
    constructor(elementRef: ElementRef);
    /**
     * Initialize the canvas drawing context. If we have an aspect ratio set up, the canvas will resize
     * according to the aspect ratio.
     */
    ngOnInit(): void;
    createColorPalette(): void;
    closeOnExternalClick(event: any): void;
    toggleColorPicker(event: Event): void;
    determineColorFromCanvas(event: any): string;
    selectColor(color: string): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CanvasWhiteboardColorPickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<CanvasWhiteboardColorPickerComponent, "canvas-whiteboard-colorpicker", never, { "selectedColor": "selectedColor"; "showColorPicker": "showColorPicker"; "previewText": "previewText"; }, { "onToggleColorPicker": "onToggleColorPicker"; "onColorSelected": "onColorSelected"; "onSecondaryColorSelected": "onSecondaryColorSelected"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FudmFzLXdoaXRlYm9hcmQtY29sb3JwaWNrZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNhbnZhcy13aGl0ZWJvYXJkLWNvbG9ycGlja2VyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIE9uSW5pdCwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQ2FudmFzV2hpdGVib2FyZENvbG9yUGlja2VyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY7XG4gICAgcHJldmlld1RleHQ6IHN0cmluZztcbiAgICByZWFkb25seSBzZWxlY3RlZENvbG9yOiBzdHJpbmc7XG4gICAgY2FudmFzOiBFbGVtZW50UmVmO1xuICAgIHJlYWRvbmx5IHNob3dDb2xvclBpY2tlcjogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9jb250ZXh0O1xuICAgIG9uVG9nZ2xlQ29sb3JQaWNrZXI6IEV2ZW50RW1pdHRlcjxib29sZWFuPjtcbiAgICBvbkNvbG9yU2VsZWN0ZWQ6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIG9uU2Vjb25kYXJ5Q29sb3JTZWxlY3RlZDogRXZlbnRFbWl0dGVyPHN0cmluZz47XG4gICAgY29uc3RydWN0b3IoZWxlbWVudFJlZjogRWxlbWVudFJlZik7XG4gICAgLyoqXG4gICAgICogSW5pdGlhbGl6ZSB0aGUgY2FudmFzIGRyYXdpbmcgY29udGV4dC4gSWYgd2UgaGF2ZSBhbiBhc3BlY3QgcmF0aW8gc2V0IHVwLCB0aGUgY2FudmFzIHdpbGwgcmVzaXplXG4gICAgICogYWNjb3JkaW5nIHRvIHRoZSBhc3BlY3QgcmF0aW8uXG4gICAgICovXG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBjcmVhdGVDb2xvclBhbGV0dGUoKTogdm9pZDtcbiAgICBjbG9zZU9uRXh0ZXJuYWxDbGljayhldmVudDogYW55KTogdm9pZDtcbiAgICB0b2dnbGVDb2xvclBpY2tlcihldmVudDogRXZlbnQpOiB2b2lkO1xuICAgIGRldGVybWluZUNvbG9yRnJvbUNhbnZhcyhldmVudDogYW55KTogc3RyaW5nO1xuICAgIHNlbGVjdENvbG9yKGNvbG9yOiBzdHJpbmcpOiB2b2lkO1xufVxuIl19